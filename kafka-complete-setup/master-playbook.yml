- hosts: all
  become: true
  tasks:
  
  - name: gather fact hostname
    debug:
      msg: "{{ ansible_hostname }}"

  - name: Add IP address of all hosts to all hosts
    lineinfile:
      dest: /etc/hosts
      line: "{{ item }}"
      state: present
    with_items: 
    - 172.16.1.30 kafka-0
    - 172.16.1.31 kafka-1
    - 172.16.1.32 kafka-2

  - name: Put SELinux in permissive mode, logging actions that would be blocked.
    selinux:
      policy: targeted
      state: permissive

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Install packages that needed for k8s
    yum:
      name:
      - java-11-openjdk.x86_64
      - wget
      - nc
      state: present
      
  - name: disable firewalld
    service:
      name: firewalld
      state: stopped
      enabled: no

  - name: Download kafka and unzip
    unarchive:
      src: https://downloads.apache.org/kafka/3.3.1/kafka_2.13-3.3.1.tgz
      dest: /opt/
      remote_src: yes

  - name: Rename kafka directory
    file:
      src: /opt/kafka_2.13-3.3.1
      dest: /opt/kafka
      state: link

  - name: Create a dataDir 
    file:
      path: /data/zookeeper
      state: directory
      mode: '0755'
      owner: vagrant
      group: vagrant
      recurse: yes

  - name: Create a dataDir 
    file:
      path: /var/zookeeper/log
      state: directory
      mode: '0755'
      owner: vagrant
      group: vagrant
      recurse: yes

  - name: adding myid to zookeeper cluster for {{ansible_hostname}}
    copy:
      content: |
               1
      dest: /data/zookeeper/myid
      mode: '0755'
      owner: vagrant
      group: vagrant
    when: ansible_hostname == "kafka-0"
    
  - name: adding myid to zookeeper cluster for {{ansible_hostname}}
    copy:
      content: |
               2
      dest: /data/zookeeper/myid
      mode: '0755'
      owner: vagrant
      group: vagrant
    when: ansible_hostname  == "kafka-1"
    
  - name: adding myid to zookeeper cluster for {{ansible_hostname}}
    copy:
      content: |
               3
      dest: /data/zookeeper/myid
      mode: '0755'
      owner: vagrant
      group: vagrant
    when: ansible_hostname == "kafka-2"
    
  - name: Copy zookeeper.properties to zookeeper.properties
    copy:
      content: |
               dataDir=/data/zookeeper
               dataLogDir=/var/zookeeper/log
               clientPort=2181
               maxClientCnxns=0
               tickTime=2000
               initLimit=10
               syncLimit=5
               server.1=0.0.0.0:2888:3888
               server.2=kafka-1:2888:3888
               server.3=kafka-2:2888:3888
               4lw.commands.whitelist=*
      dest: /opt/kafka_2.13-3.3.1/config/zookeeper.properties
    when: ansible_hostname == "kafka-0"

  - name: Copy zookeeper.properties to zookeeper.properties
    copy:
      content: |
               dataDir=/data/zookeeper
               dataLogDir=/var/zookeeper/log
               clientPort=2181
               maxClientCnxns=0
               tickTime=2000
               initLimit=10
               syncLimit=5
               server.1=kafka-0:2888:3888
               server.2=0.0.0.0:2888:3888
               server.3=kafka-2:2888:3888
               4lw.commands.whitelist=*
      dest: /opt/kafka_2.13-3.3.1/config/zookeeper.properties
    when: ansible_hostname == "kafka-1"      

  - name: Copy zookeeper.properties to zookeeper.properties
    copy:
      content: |
               dataDir=/data/zookeeper
               dataLogDir=/var/zookeeper/log
               clientPort=2181
               maxClientCnxns=0
               tickTime=2000
               initLimit=10
               syncLimit=5
               server.1=kafka-0:2888:3888
               server.2=kafka-1:2888:3888
               server.3=0.0.0.0:2888:3888
               4lw.commands.whitelist=*
      dest: /opt/kafka_2.13-3.3.1/config/zookeeper.properties
    when: ansible_hostname == "kafka-2"

  - name: adding kafka-zookeeper.service 
    copy:
      content: |
               [Unit]
               Description=Apache Zookeeper server (Kafka)
               Documentation=http://zookeeper.apache.org
               Requires=network.target remote-fs.target
               After=network.target remote-fs.target
               [Service]
               Type=simple
               User=root
               Group=root
               Environment=JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.17.0.8-2.el8_6.x86_64
               ExecStart=/opt/kafka/bin/zookeeper-server-start.sh /opt/kafka/config/zookeeper.properties
               ExecStop=/opt/kafka/bin/zookeeper-server-stop.sh
               [Install]
               WantedBy=multi-user.target
      dest: /usr/lib/systemd/system/kafka-zookeeper.service

  - name: start zookeeper
    systemd:
      state: started
      daemon_reload: yes
      name: kafka-zookeeper.service
      enabled: yes
      
  - name: Create a dataDir 
    file:
      path: /data/kafka
      state: directory
      mode: '0755'
      owner: vagrant
      group: vagrant
      recurse: yes
      
  - name: Copy zookeeper.properties to zookeeper.properties
    copy:
      content: |
               broker.id=0
               advertised.listeners=PLAINTEXT://kafka-0:9092
               delete.topic.enable=true
               log.dirs=/data/kafka
               num.partitions=8
               default.replication.factor=3
               min.insync.replicas=2
               log.retention.hours=168
               log.segment.bytes=1073741824
               log.retention.check.interval.ms=300000
               zookeeper.connect=kafka-0:2181,kafka-1:2181,kafka-2:2181/kafka
               zookeeper.connection.timeout.ms=6000
               auto.create.topics.enable=true
      dest: /opt/kafka_2.13-3.3.1/config/server.properties
    when: ansible_hostname == "kafka-0"
    
  - name: Copy zookeeper.properties to zookeeper.properties
    copy:
      content: |
               broker.id=1
               advertised.listeners=PLAINTEXT://kafka-1:9092
               delete.topic.enable=true
               log.dirs=/data/kafka
               num.partitions=8
               default.replication.factor=3
               min.insync.replicas=2
               log.retention.hours=168
               log.segment.bytes=1073741824
               log.retention.check.interval.ms=300000
               zookeeper.connect=kafka-0:2181,kafka-1:2181,kafka-2:2181/kafka
               zookeeper.connection.timeout.ms=6000
               auto.create.topics.enable=true
      dest: /opt/kafka_2.13-3.3.1/config/server.properties
    when: ansible_hostname == "kafka-1"
    
  - name: Copy zookeeper.properties to zookeeper.properties
    copy:
      content: |
               broker.id=2
               advertised.listeners=PLAINTEXT://kafka-2:9092
               delete.topic.enable=true
               log.dirs=/data/kafka
               num.partitions=8
               default.replication.factor=3
               min.insync.replicas=2
               log.retention.hours=168
               log.segment.bytes=1073741824
               log.retention.check.interval.ms=300000
               zookeeper.connect=kafka-0:2181,kafka-1:2181,kafka-2:2181/kafka
               zookeeper.connection.timeout.ms=6000
               auto.create.topics.enable=true
      dest: /opt/kafka_2.13-3.3.1/config/server.properties
    when: ansible_hostname == "kafka-2"
    
  - name: adding kafka.service 
    copy:
      content: |
               [Unit]
               Description=Apache Kafka server (broker)
               Documentation=http://kafka.apache.org/documentation.html
               Requires=network.target remote-fs.target
               After=network.target remote-fs.target kafka-zookeeper.service
               [Service]
               Type=simple
               User=root
               Environment=JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.17.0.8-2.el8_6.x86_64
               ExecStart=/opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties
               ExecStop=/opt/kafka/bin/kafka-server-stop.sh
               [Install]
               WantedBy=multi-user.target
      dest: /usr/lib/systemd/system/kafka.service
      
  - name: start zookeeper
    systemd:
      state: started
      daemon_reload: yes
      name: kafka.service
      enabled: yes
